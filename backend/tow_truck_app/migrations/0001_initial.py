# Generated by Django 4.2.7 on 2025-10-16 22:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID заказа')),
                ('vehicle_make', models.CharField(max_length=100, verbose_name='Марка автомобиля')),
                ('vehicle_model', models.CharField(max_length=100, verbose_name='Модель автомобиля')),
                ('vehicle_year', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('vehicle_color', models.CharField(max_length=50, verbose_name='Цвет автомобиля')),
                ('license_plate', models.CharField(max_length=20, verbose_name='Госномер автомобиля')),
                ('pickup_address', models.TextField(verbose_name='Адрес забора')),
                ('pickup_latitude', models.FloatField(verbose_name='Широта места забора')),
                ('pickup_longitude', models.FloatField(verbose_name='Долгота места забора')),
                ('delivery_address', models.TextField(verbose_name='Адрес доставки')),
                ('delivery_latitude', models.FloatField(verbose_name='Широта места доставки')),
                ('delivery_longitude', models.FloatField(verbose_name='Долгота места доставки')),
                ('description', models.TextField(blank=True, verbose_name='Описание проблемы')),
                ('priority', models.CharField(choices=[('LOW', 'Низкий'), ('NORMAL', 'Обычный'), ('HIGH', 'Высокий'), ('URGENT', 'Срочный')], default='NORMAL', max_length=10, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('PENDING', 'Ожидает подтверждения'), ('CONFIRMED', 'Подтвержден'), ('ASSIGNED', 'Назначен водитель'), ('IN_PROGRESS', 'Выполняется'), ('COMPLETED', 'Завершен'), ('CANCELLED', 'Отменен')], default='PENDING', max_length=15, verbose_name='Статус')),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Предварительная цена')),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Финальная цена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='Запланированное время')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название типа')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('max_weight', models.FloatField(verbose_name='Максимальный вес (тонны)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Базовая цена')),
            ],
            options={
                'verbose_name': 'Тип транспортного средства',
                'verbose_name_plural': 'Типы транспортных средств',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('CLIENT', 'Клиент'), ('DRIVER', 'Водитель'), ('OPERATOR', 'Оператор')], default='CLIENT', max_length=10, verbose_name='Тип пользователя')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Номер телефона')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верифицирован')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='tow_truck_user_set', related_query_name='tow_truck_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='tow_truck_user_set', related_query_name='tow_truck_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TowTruck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=20, unique=True, verbose_name='Госномер')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('capacity', models.FloatField(verbose_name='Грузоподъемность (тонны)')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Доступен'), ('BUSY', 'Занят'), ('MAINTENANCE', 'На обслуживании'), ('OFFLINE', 'Недоступен')], default='AVAILABLE', max_length=15, verbose_name='Статус')),
                ('current_location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта текущего местоположения')),
                ('current_location_lon', models.FloatField(blank=True, null=True, verbose_name='Долгота текущего местоположения')),
                ('last_location_update', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление местоположения')),
                ('driver', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'DRIVER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tow_truck_app.user', verbose_name='Водитель')),
                ('vehicle_types', models.ManyToManyField(related_name='tow_trucks', to='tow_truck_app.vehicletype', verbose_name='Поддерживаемые типы ТС')),
            ],
            options={
                'verbose_name': 'Эвакуатор',
                'verbose_name_plural': 'Эвакуаторы',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка водителя')),
                ('service_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка сервиса')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='tow_truck_app.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('payment_method', models.CharField(choices=[('CASH', 'Наличные'), ('CARD', 'Банковская карта'), ('BANK_TRANSFER', 'Банковский перевод'), ('MOBILE_PAYMENT', 'Мобильный платеж')], max_length=15, verbose_name='Способ оплаты')),
                ('status', models.CharField(choices=[('PENDING', 'Ожидает оплаты'), ('PROCESSING', 'Обрабатывается'), ('COMPLETED', 'Оплачен'), ('FAILED', 'Ошибка оплаты'), ('REFUNDED', 'Возвращен')], default='PENDING', max_length=15, verbose_name='Статус оплаты')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='ID транзакции')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата оплаты')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='tow_truck_app.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('PENDING', 'Ожидает подтверждения'), ('CONFIRMED', 'Подтвержден'), ('ASSIGNED', 'Назначен водитель'), ('IN_PROGRESS', 'Выполняется'), ('COMPLETED', 'Завершен'), ('CANCELLED', 'Отменен')], max_length=15, verbose_name='Предыдущий статус')),
                ('new_status', models.CharField(choices=[('PENDING', 'Ожидает подтверждения'), ('CONFIRMED', 'Подтвержден'), ('ASSIGNED', 'Назначен водитель'), ('IN_PROGRESS', 'Выполняется'), ('COMPLETED', 'Завершен'), ('CANCELLED', 'Отменен')], max_length=15, verbose_name='Новый статус')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время изменения')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tow_truck_app.user', verbose_name='Изменен пользователем')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='tow_truck_app.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'История статуса заказа',
                'verbose_name_plural': 'История статусов заказов',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='client',
            field=models.ForeignKey(limit_choices_to={'user_type': 'CLIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='tow_truck_app.user', verbose_name='Клиент'),
        ),
        migrations.AddField(
            model_name='order',
            name='tow_truck',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tow_truck_app.towtruck', verbose_name='Эвакуатор'),
        ),
        migrations.AddField(
            model_name='order',
            name='vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tow_truck_app.vehicletype', verbose_name='Тип транспортного средства'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('ORDER_CREATED', 'Заказ создан'), ('ORDER_ASSIGNED', 'Заказ назначен'), ('ORDER_IN_PROGRESS', 'Заказ выполняется'), ('ORDER_COMPLETED', 'Заказ завершен'), ('PAYMENT_RECEIVED', 'Платеж получен'), ('DRIVER_ARRIVED', 'Водитель прибыл'), ('GENERAL', 'Общее уведомление')], max_length=20, verbose_name='Тип уведомления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tow_truck_app.order', verbose_name='Связанный заказ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tow_truck_app.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
    ]
